process in a request

1. Session Initialization: When a user visits a website, the web server generates a unique session ID for that user's session.

2. Cookie Creation: The web server sends a response to the user's browser, which includes a "Set-Cookie" header.
                      "headers": {
                        "Content-Type": "",
                        "Set-Cookie": "sessionID=abc123; Expires=..; ...",
                      },
                      The browser then stores this cookie locally.
3. Subsequent Requests: the browser automatically includes the session ID cookie in the headers.
                      "headers": {
                        "Cookie": "sessionID=abc123; Expires=..; ...",
                      },
4. Server-Side: The server uses the sessionID to look up the associated user's session data,
                set sessionID User; (store as JSON)

Redis: in-memory data store optimized for high-speed data access, caching, session management, real-time data processing
MongoDB: NoSQL database for persistent storage like MySQL
